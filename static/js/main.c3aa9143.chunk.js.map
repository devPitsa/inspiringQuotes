{"version":3,"sources":["services/api.js","pages/Dashboard/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","ListQuote","Dashboard","useState","quotes","setQuotes","useEffect","a","async","post","graphqlOperation","response","aleatorio","Math","floor","random","data","length","console","log","loadApi","className","quote","author","onClick","reloadApi","Routes","path","component","App","type","size","namespace","repo","defer","src","ReactDOM","render","document","getElementById"],"mappings":"8UAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,uECEPC,G,OAAS,8FASA,SAASC,IAAa,IAAD,EAEJC,mBAAS,IAFL,mBAEzBC,EAFyB,KAEjBC,EAFiB,KAuBhC,OAnBAC,qBAAU,YACN,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC2BV,EAAIY,KAAK,IAAKC,YAAiBT,KAD1D,OACUU,EADV,OAEQC,EAAYC,KAAKC,MAAMD,KAAKE,SAASJ,EAASK,KAAKA,KAAKZ,OAAOa,QAEnEC,QAAQC,IAAIR,EAASK,KAAKA,KAAKZ,OAAOQ,IACtCP,EAAUM,EAASK,KAAKA,KAAKZ,OAAOQ,IALxC,qCAOAQ,KACD,IAWC,oCACA,yBAAKC,UAAU,WACX,+BAAKjB,EAAOkB,MAAZ,KACA,gCAAMlB,EAAOmB,SAEjB,4BAAQC,QAAS,kBAbrB,4BAAAjB,EAAAC,OAAA,kEAAAD,EAAA,MAC2BV,EAAIY,KAAK,IAAKC,YAAiBT,KAD1D,OACUU,EADV,OAEQC,EAAYC,KAAKC,MAAMD,KAAKE,SAASJ,EAASK,KAAKA,KAAKZ,OAAOa,QACnEC,QAAQC,IAAIP,GACZP,EAAUM,EAASK,KAAKA,KAAKZ,OAAOQ,IAJxC,qCAa2Ba,IAAaJ,UAAU,OAA9C,iBCtCO,SAASK,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW1B,MCc5B2B,MAff,WACE,OACE,yBAAKR,UAAU,aACb,gDACA,kBAACK,EAAD,MAEA,kBAAC,IAAD,CAAcI,KAAK,aAAaC,KAAK,QAAQC,UAAU,gBAAgBC,KAAK,oBAE5E,4BAAQzB,OAAK,EAAC0B,OAAK,EAACC,IAAI,2CCZ9BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c3aa9143.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://19cprlbhrc.execute-api.us-east-1.amazonaws.com/dev/graphql',\n});\n\nexport default api ; ","import React, { useState, useEffect } from 'react';\nimport { graphqlOperation } from 'aws-amplify'\nimport api from '../../services/api';\nimport './styles.css'\n\nconst ListQuote = `\n    query {\n        quotes {\n            quote\n            author\n        }\n    }\n`\n\nexport default function Dashboard() {\n    \n    const [quotes, setQuotes] = useState([]);\n\n    useEffect(() => {\n        async function loadApi() {\n            const response = await api.post(\"/\", graphqlOperation(ListQuote));\n            let aleatorio = Math.floor(Math.random()*response.data.data.quotes.length);\n\n            console.log(response.data.data.quotes[aleatorio]);\n            setQuotes(response.data.data.quotes[aleatorio]);\n        }\n        loadApi();\n    }, []);\n\n\n    async function reloadApi() {\n        const response = await api.post(\"/\", graphqlOperation(ListQuote));\n        let aleatorio = Math.floor(Math.random()*response.data.data.quotes.length);\n        console.log(aleatorio)\n        setQuotes(response.data.data.quotes[aleatorio]);\n    }\n\n    return (\n        <>\n        <div className=\"content\">\n            <p>\"{quotes.quote}\"</p>\n            <h2>-{quotes.author}</h2>\n        </div>\n        <button onClick={() => reloadApi()} className=\"btn\">I feel lucky</button>\n\n        </>\n    )\n}","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './pages/Dashboard'\n\nexport default function Routes() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/\" component={Dashboard} />\n            </Switch>\n        </HashRouter>\n    )\n}","import React from 'react';\nimport './App.css';\nimport GitHubButton from \"react-github-button\";\n\n\nimport Routes from \"./routes\";\n\n\nfunction App() {\n  return (\n    <div className='container'>\n      <h1>Inspiring Quotes</h1>\n      <Routes />\n\n      <GitHubButton type=\"stargazers\" size=\"large\" namespace=\"viniciusmdias\" repo=\"inspiringQuotes\" />\n\n      <script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}